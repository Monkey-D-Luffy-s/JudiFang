@model instademo.Models.InitialVideoModal
@{
    ViewData["Title"] = "Instagram Reels Style Video";
    var RandVideo = Model.startVideo;
    if (Model.startVideo == null)
    {
        var rand = new Random();
        var i = rand.Next(0, Model.videos.Count);
        RandVideo = Model.videos[i];
    }

}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Bootstrap Icons CDN -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

    <title>@ViewData["Title"]</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            background-color: #000;
            min-height: 100vh; /* Allow scrolling */
        }

        .Inst-Container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: calc(90vh - 70px); /* Adjust for header height */
            padding: 10px 0px;
        }

        .reel-container {
            width: 100%;
            max-width: 450px;
            aspect-ratio: 9 / 16;
            background-color: #000;
            position: relative;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
            touch-action: pan-y;
        }

        video {
            width: 100%;
            height: 100%;
            object-fit: cover;
            display: block;
        }

        .reel-overlay {
            position: absolute;
            bottom: 20px;
            left: 20px;
            color: #fff;
            font-family: Arial, sans-serif;
            font-size: 16px;
            text-shadow: 0 0 5px rgba(0, 0, 0, 0.7);
            pointer-events: none;
        }

        .actions{
            position:absolute;
            bottom: 5%;
            left: 90%;
            color: aliceblue;
            font-size: 30px;
        }
    </style>
</head>
<body>
    <div class="Inst-Container">
        <div class="reel-container">
            <video autoplay loop playsinline>
                <source id="videoSource" src="/Uploads/@RandVideo.VideoPath" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            <div class="reel-overlay">
                <p>Sample Instagram Reel</p>
            </div>
            <div class="actions">
                <div class="flex-column gap-3">
                    <a href="@Url.Action("Like", "videos",new { id = RandVideo.Id })">
                        <p><i class="bi bi-hand-thumbs-up"></i></p>
                    </a>
                    <p class="fs-[16px]">@RandVideo.Likes </p>
                    <a href="@Url.Action("Like", "videos",new { id = RandVideo.Id })">
                        <p><i class="bi bi-heart"></i></p>
                    </a>
                    <a href="@Url.Action("MyAction", "MyController",new { id = 5, name = "shiva" })">
                        <p><i class="bi bi-chat"></i></p>
                    </a>
                    @* <a href="@Url.Action("MyAction", "MyController")"> *@
                        <p><i class="bi bi-share"></i></p>
                    @* </a> *@

                </div>
            </div>
        </div>
    </div>
   

    <script>
        const videoList = @Html.Raw(Json.Serialize(Model));
        const videoTag = document.querySelector('video');
        const source = document.getElementById('videoSource');

        function loadRandomVideo() {
            const randomIndex = Math.floor(Math.random() * videoList.length);
            const video = videoList[randomIndex];
            source.src = '/Uploads/' + video.videoPath;
            videoTag.load();
            videoTag.play();
        }

        let touchStartY = 0;
        let touchEndY = 0;

        document.addEventListener('touchstart', (e) => {
            touchStartY = e.changedTouches[0].screenY;
        });

        document.addEventListener('touchend', (e) => {
            touchEndY = e.changedTouches[0].screenY;
            handleSwipe();
        });

        function handleSwipe() {
            const swipeDistance = touchStartY - touchEndY;
            const minSwipeDistance = 50;

            if (swipeDistance > minSwipeDistance || swipeDistance < -minSwipeDistance) {
                loadRandomVideo();
            }
        }

        document.addEventListener('wheel', (e) => {
            if (e.deltaY > 50 || e.deltaY < -50) {
                loadRandomVideo();
            }
        });

        videoTag.addEventListener('click', () => {
            if (videoTag.paused) {
                videoTag.play();
            } else {
                videoTag.pause();
            }
        });
    </script>
</body>